openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
components:
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: authorization

paths:
  /auth/login:
    post:
      summary: Login as a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string                                                         
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Bad request
        '401':
          description: Authentication failed

  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                  format: email
                name:
                  type: string
                  example: John Doe
                password:
                  type: string
                  example: mysecretpassword
                phone:
                  type: string
                  example: '1234567890'
                username:
                  type: string
                  example: johndoe123
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request or user registration failed
        '500':
          description: Internal server error

  /user/profile:
    post:
      summary: Get user profile by ID
      tags:
        - Profile
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
                  password:
                    type: string
                  phone:
                    type: string
                  username:
                    type: string
                  __v:
                    type: integer

        '403':
          description: Forbidden
        '401':
           description: Unauthorized
        '500':
           description: Server error
  /auth/logout:
      post:
        summary: Logout user and invalidate token
        description: Logs out a user and invalidates their token. The token is removed from the activeTokens set.
        tags:
          - Authentication
        security:
          - jwtAuth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
        responses:
          '200':
            description: Logout successful
          '400':
            description: No token provided
          '401':
            description: Invalid or expired token